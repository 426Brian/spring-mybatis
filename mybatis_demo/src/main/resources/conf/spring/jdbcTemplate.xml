<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描注解组件 -->
    <context:component-scan base-package="com.jdbcTemplate">

    </context:component-scan>

    <!-- 引入外部配置文件 -->
    <context:property-placeholder location="classpath:conf/db/jdbc.properties"/>

    <!-- 用来控制业务逻辑。数据源、事务控制、aop -->
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>

    <!--JdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="datasource"/>
    </bean>


    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!--编程式配置事务管理  利用模板-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>


    <!--声明式事务管理 基于TransactionProxyFactoryBean，如下是对accountService 这个类进行事务管理-->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!--配置目标对象-->
        <property name="target" ref="accountService"/>
        <!--事务管理器-->
        <property name="transactionManager" ref="transactionManager"/>
        <!--事务级别-->
        <property name="transactionAttributes">
            <props>
                <!-- prop 的格式：
                 PROPAGATION    事务的传播行为
                 ISOLATION      事务的隔离级别
                 readOnly       只读（不进行修改，删除，插入）
                 -Exception     发生哪些异常回滚
                 +Exception     发生那些事务不回滚-->

                <!--key是具体的方法名字-->
                <prop key="transfer">PROPAGATIOIN_REQUIRED</prop>

            </props>
        </property>
    </bean>

    <!--aspect 声明式事务管理 com 下 dao 包下的所有方法-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delet*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!--expression="execution(* dao.*.*(..))" 第一个*代表所有的返回值类型，dao代表包名，
    第二个*带表所有的类，第三个*代表所有的方法，(..)代表方法的参数-->
        <aop:pointcut id="daomethod" expression="execution(* com.*.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="daomethod"/>
    </aop:config>


    <!--注解式事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--MVC 注解驱动-->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>


</beans>